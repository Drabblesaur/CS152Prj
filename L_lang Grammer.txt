L Language Grammer 

PROGRAM :-> EPSILON | FUNCTION PROG

FUNCTION :-> FUNCT VAR_NAME <- (DECLARATIONS) {BEGINLOCAL ARGUMENTS ENDLOCAL STATEMENTS RETURN} 

ARGUMENTS :-> EPSILON | S_DECLARATIONS , ARGUMENTS | S_DECLARATIONS ARGUMENTS

STATEMENTS :-> EPSILON | STATEMENT STATEMENTS
STATEMENT :-> S_DECLARATIONS | S_ASSIGNMENT | S_WHILE | S_DO | S_IF | S_PRINT | S_PRINTLN | S_READ | S_RETURN

S_DECLARATIONS :-> S_DECLARATION ; | S_DECLARATION , S_DECLARATIONS | S_DECLARATION -> EXPRESSION ; | S_DECLARATION -> EXPRESSION , S_DECLARATIONS
S_DECLARATION :-> TYPE VAR_NAME [ NUMBER ] | TYPE VAR_NAME [ ] | TYPE VAR_NAME

TYPE :-> INT | BOOL

S_ASSIGNMENT :-> VAR_NAME -> EXPRESSION ;
S_WHILE :-> WHILE (RELATIONAL) {STATEMENTS} 
S_DO :-> DO {STATEMENTS} WHILE (RELATIONAL) 
S_IF :-> IF (RELATIONAL) {STATEMENTS} ; | IF (RELATIONAL) {STATEMENTS} S_ELSE_IF
S_ELSE_IF :-> ELSE_IF (RELATIONAL) {STATEMENTS} S_ELSE_IF | ELSE (RELATIONAL) {STATEMENTS} ;
S_PRINT :-> PRINT (EXPRESSION) ; 
S_PRINTLN :-> PRINTLN (EXPRESSION) ;
S_READ :-> READ (VAR_NAME) ;
S_RETURN :-> RETURN EXPRESSION ;

RELATIONAL :-> EXPRESSION COMP EXPRESSION

COMP :-> LT | LTE | GT | GTE | EQ | NEQ

EXPRESSION: MULOP | MULOP PLUS MULOP | MULOP MINUS MULOP

MULOP :-> TERM | MULOP MULT TERM | MULOP DIV TERM | MULOP MOD TERM

TERM :-> VAR_NAME | NUMBER | ( EXPRESSION ) | VAR_NAME () | VAR_NAME ( EXPRESSION )
